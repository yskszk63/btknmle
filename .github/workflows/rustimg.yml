name: Build rust image

on: push

jobs:
  deploy-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
        - amd64
        - arm32v5
        - arm32v7
    #if: github.ref == 'refs/heads/master'
    env:
      DOCKER_REPO: yskszk63/btknmle-rust

    steps:
    - uses: actions/checkout@v2

    # work around for `Value too large for defined data type;`
    - name: Setup btrfs volume driver
      run: |
        sudo systemctl stop docker.service
        sudo fallocate -l10GB /mnt/docker.img
        sudo mkfs.btrfs /mnt/docker.img
        sudo mount -t btrfs /mnt/docker.img /var/lib/docker
        echo '{"storage-driver":"btrfs"}' | sudo tee /etc/docker/daemon.json > /dev/null
        sudo systemctl start docker.service

    - name: Setup binfmt
      run: |
        docker run --rm --privileged "$BINFMT_IMAGE"
      env:
        BINFMT_IMAGE: 'docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64'

    - name: Login Doker
      run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
      env:
        DOCKER_USERNAME: yskszk63
        DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}

    - name: Build and push
      run: |
        case "${{ matrix.arch }}" in
          "amd64")
            DEB_ARCH=amd64
            RUST_ARCH=x86_64-unknown-linux-gnu
            ;;
          "arm32v7")
            DEB_ARCH=arm32v7
            RUST_ARCH=armv7-unknown-linux-gnueabihf
            ;;
          "arm32v5")
            DEB_ARCH=arm32v5
            RUST_ARCH=arm-unknown-linux-gnueabihf
            ;;
        esac
        docker build \
          -f support/Dockerfile-rust \
          -t $DOCKER_REPO:$DEB_ARCH \
          --build-arg DEB_ARCH=${DEB_ARCH} \
          --build-arg RUST_VERSION=${RUST_VERSION} \
          --build-arg RUST_ARCH=${RUST_ARCH} \
          --build-arg RUSTUP_VERSION=${RUSTUP_VERSION} \
          .
      env:
        RUST_VERSION: "1.42.0"
        RUSTUP_VERSION: "1.21.1"

# vim: set sw=2 ts=2 sts=2:
